# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $terminal alacritty

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: FiraCode Nerd Font 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 10

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- sh ~/scripts/lock.sh
# exec xautolock -time 3 -locker "sh ~/scripts/lock.sh" &
exec xset s 420 420
# exec --no-startup-id xidlehook --detect-sleep --not-when-audio --not-when-fullscreen --timer 69 "sh ~/scripts/lock.sh" "" &

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Dunst
# https://faq.i3wm.org/question/5187/how-to-get-dunst-working/index.html
exec --no-startup-id dunst -config /home/$USER/.config/dunst/dunstrc

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id sh ~/scripts/pactl_vol.sh
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioStop exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Use xorg-backlight to adjust brightness
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 5 && light -O
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 5 && light -O

# Screenshots
bindsym Ctrl+Print exec --no-startup-id maim "/home/$USER/Pictures/Screenshots/$(date).png"
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/Screenshots/$(date).png"
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/Screenshots/$(date).png"

# Clipboard Screenshots
bindsym Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id "dmenu_run -nf '#F8F8F2' -nb '#282A36' -sb '#6272A4' -sf '#F8F8F2' -fn 'monospace-10' -p 'dmenu:'"

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -nf '#F8F8F2' -nb '#282A36' -sb '#6272A4' -sf '#F8F8F2' -fn 'monospace-10' -p 'dmenu:'"
bindsym $mod+f exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -i -nf '#F8F8F2' -nb '#282A36' -sb '#6272A4' -sf '#F8F8F2' -fn 'monospace-10' -p 'dmenu:'"

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation |
bindsym $mod+Ctrl+h split h

# split in vertical orientation -
bindsym $mod+Ctrl+v split v

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# bindsym $mod+Shift+e exec i3-msg exit
set $Locker sh ~/scripts/lock.sh

set $mode_system System: (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id systemctl suspend && $Locker, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate && $Locker, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Pause mode "$mode_system"

# -----

set $mode_notif Notification: (a) action, (r) mark as read, (c) read all, (f) context, (t) toggle notif
mode "$mode_notif" {
    bindsym a exec --no-startup-id dunstctl action, mode "default"
    bindsym r exec --no-startup-id dunstctl close, mode "default"
    bindsym c exec --no-startup-id dunstctl close-all, mode "default"
    bindsym f exec --no-startup-id dunstctl context, mode "default"
    bindsym t exec --no-startup-id dunstctl set-paused toggle, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+n mode "$mode_notif"

# -----

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


# Dracula https://github.com/dracula/i3/blob/master/.config/i3/config
# class                 border  bground text    indicator child_border
client.focused          #6272A4 #6272A4 #F8F8F2 #6272A4   #6272A4
client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36

client.background       #F8F8F2


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3status
  position top
  height 25
  # tray_output none
  separator_symbol ":|:"
  strip_workspace_numbers yes
  strip_workspace_name no

  colors {
    background #282A36
    statusline #F8F8F2
    separator  #44475A

    focused_workspace  #44475A #44475A #F8F8F2
    active_workspace   #282A36 #44475A #F8F8F2
    inactive_workspace #282A36 #282A36 #BFBFBF
    urgent_workspace   #FF5555 #FF5555 #F8F8F2
    binding_mode       #FF5555 #FF5555 #F8F8F2
  }
}


# i3gaps (https://github.com/Airblader/i3)
# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 3

# Examples
# gaps inner 10

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Only enable outer gaps when there is exactly one container
smart_gaps inverse_outer

# Activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
smart_borders no_gaps

# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps

# load wallpaper
exec_always "feh --bg-scale --randomize /home/$USER/Pictures/Wallpapers/Active/current*.png"

# lock the screen
# resize the image because i3lock doesn't
# convert -resize $(xdpyinfo | grep dimensions | cut -d\  -f7 | cut -dx -f1) source-image.jpg lockscreen.png
# bindsym $mod+shift+x exec --no-startup-id "i3lock -i /home/$USER/Pictures/Wallpapers/Active/lockscreen_wallpaper*.png -e -f"
# bindsym $mod+Shift+x exec sh ~/scripts/lock.sh

# Suspend
# bindsym $mod+Shift+period exec systemctl suspend

# auto starting apps
# exec --no-startup-id i3-msg 'workspace $ws2; exec google-chrome-stable'
assign [class="Alacritty"] $ws1
assign [class="Google-chrome"] $ws2
assign [class="libreoffice"] $ws3
assign [class="Steam"] $ws6
assign [class="discord"] $ws10

# jump to urgent
# for_window [urgent="latest"] focus
bindsym $mod+u [urgent=latest] focus

# exec --no-startup-id $terminal
exec --no-startup-id google-chrome-stable
# exec --no-startup-id discord

# keybinds for layout
bindsym Mod1+Shift+1 exec setxkbmap us && notify-send -t 6969 qwerty && xmodmap ~/.Xmodmap
bindsym Mod1+Shift+2 exec setxkbmap us colemak && notify-send -t 6969 colemak && xmodmap ~/.Xmodmap
bindsym Mod1+Shift+0 exec notify-send -t 6969 colemak && sh ~/scripts/chadify_keys.sh 
exec --no-startup-id sh ~/scripts/chadify_keys.sh

# floating window 
# int's are from xrandr
floating_minimum_size 320 x 200
floating_maximum_size 1366 x 768

focus_follows_mouse no

# add a keybind for triggering screenkey
# add keybing for triggering simplescreenrecorder
# add keybing for marking notification as read
# add command mode?
# add a config to mute notification for a certain period of time
